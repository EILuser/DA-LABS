ylab="Weight loss (kg)",
xlab="Diet type")
abline(h=0, col="black")
summary(data$hwy)
data <- read.csv("data/diet.csv", row.names=1)
summary(data)
summary(data$hwy)
colnames(data) <- c("gender", "age", "height", "initial.weight",
"diet.type", "final.weight")
data$diet.type <- factor(c("A", "B", "C")[data$diet.type])
data$weight.loss = data$initial.weight - data$final.weight
summary(data)
boxplot(data=data,
weight.loss~diet.type,
col="light gray",
ylab="Weight loss (kg)",
xlab="Diet type")
abline(h=0, col="black")
summary(data$weight.loss)
boxplot(data=data,
weight.loss~diet.type,
col="light gray",
ylab="Weight loss (kg)",
xlab="Diet type")
abline(h=0, col="black")
boxplot.stats(data$weight.loss)$out
boxplot(data=data,
weight.loss~diet.type,
col="light gray",
ylab="Weight loss (kg)",
xlab="Diet type")
abline(h=0, col="black")
boxplot.stats(data$weight.loss)
boxplot(data=data,
weight.loss~diet.type,
col="light gray",
ylab="Weight loss (kg)",
xlab="Diet type")
abline(h=0, col="black")
boxplot.stats(dat$hwy)
boxplot.stats(data$weight.loss)
data[data$diet.type == "A"]
data[data$diet.type = "A"]
data[data$diet.type == A]
data[data$diet.type == 0]
data$weight.loss[data$diet.type == 0]
filter(data, data$diet.type == 0)
filter(data, data$diet.type == "A")
#filter(data, data$diet.type == 0)
data
#filter(data, data$diet.type == 0)
data1 <- read.csv("data/diet.csv")
#filter(data, data$diet.type == 0)
data1 <- read.csv("data/diet.csv")
data1
#filter(data, data$diet.type == 0)
data1 <- read.csv("data/diet.csv", row.names = 1)
data1
View(data1)
data <- read.csv("data/diet.csv", row.names=1)
summary(data)
colnames(data) <- c("gender", "age", "height", "initial.weight",
"diet.type", "final.weight")
data$diet.type <- factor(c("A", "B", "C")[data$diet.type])
data$weight.loss = data$initial.weight - data$final.weight
summary(data)
boxplot(data=data,
weight.loss~diet.type,
col="light gray",
ylab="Weight loss (kg)",
xlab="Diet type")
abline(h=0, col="black")
#filter(data, data$diet.type == 0)
data
#filter(data, data$diet.type == 0)
data$diet.type
#filter(data, data$diet.type == 0)
data$diet.type == "A"
#filter(data, data$diet.type == 0)
data$diet.type ==
#filter(data, data$diet.type == 0)
data[diet.type == "A"]
#filter(data, data$diet.type == 0)
data[data$diet.type == "A"]
#filter(data, data$diet.type == 0)
data$diet.type == "A"
#filter(data, data$diet.type == 0)
data[data$diet.type == "A"]
filter(data, data$diet.type == "A")
View(data)
filter(data, diet.type == "A")
filter(data, data$diet.type == "A")
filter(data, diet.type == "A")
filter(data=data, diet.type == "A")
View(data)
filter(data, diet.type == "A")
fil <- filter(data, diet.type == "A")
fil <- filter(data, data$diet.type == "A")
fil <- filter(data, data$diet.type == "A")
fil
fil <- filter(data, data$diet.type == "A")
fil.isna()
fil <- filter(data, data$diet.type == "A")
is.na(fil)
data <- read.csv("data/diet.csv", row.names=1)
summary(data)
colnames(data) <- c("gender", "age", "height", "initial.weight",
"diet.type", "final.weight")
data$diet.type <- factor(c("A", "B", "C")[data$diet.type])
data$weight.loss = data$initial.weight - data$final.weight
summary(data)
filter(data, age == 16)
filter(data,age == 16)
colnames(data)
colnames(data)[1]
filter(data, "age" == 16)
filter(data, "diet.type" == "A")
filter(data)
data <- read.csv("data/diet.csv", row.names=1)
summary(data)
data <- read.csv("data/diet.csv", row.names=1)
summary(data)
colnames(data)
colnames(data) <- c("gender", "age", "height", "initial.weight",
"diet.type", "final.weight")
data$diet.type <- factor(c("A", "B", "C")[data$diet.type])
data$weight.loss = data$initial.weight - data$final.weight
summary(data)
data[data$diet.type == "A"]
data[data$"diet.type" == "A"]
data[diet.type == "A"]
data["diet.type" == "A"]
data
employees <- data.frame(
ID = 1:10,
Name = c("John", "Jane", "Bill", "Anna", "Tom", "Sue", "Mike", "Sara", "Alex","Nina"),
Department = c("HR", "Finance", "IT", "Finance", "IT", "HR", "IT", "Finance",
"HR", "Finance"),
Salary = c(50000, 60000, 70000, 65000, 72000, 48000, 75000, 67000, 52000, 69000)
)
employees
colnames(employees)
filter(employees, salary > 50000)
filter(employees, Salary > 50000)
filter(employees, Department == "IT")
data <- read.csv("data/diet.csv", row.names=1)
summary(data)
colnames(data) <- c("gender", "age", "height", "initial.weight",
"diet.type", "final.weight")
data$diet.type <- factor(c("A", "B", "C")[data$diet.type])
data$weight.loss = data$initial.weight - data$final.weight
summary(data)
data[data$age > 10]
data[data$age > 10]
data[data$age > 10]
data[data$weight.loss > 4]
subset(data, diet.type == "A")
boxplot.stats(subset(data, diet.type == "A")$weight.loss)
boxplot.stats(subset(data, diet.type == "A")$weight.loss)$out
data <- read.csv("data/diet.csv", row.names=1)
summary(data)
colnames(data) <- c("gender", "age", "height", "initial.weight",
"diet.type", "final.weight")
data$diet.type <- factor(c("A", "B", "C")[data$diet.type])
data$weight.loss = data$initial.weight - data$final.weight
summary(data)
boxplot(data=data,
weight.loss~diet.type,
col="light gray",
ylab="Weight loss (kg)",
xlab="Diet type")
abline(h=0, col="black")
boxplot.stats(data$weight.loss)$out
boxplot.stats(data$weight.loss)$out
boxplot.stats(data$weight.loss)$out
boxplot.stats(data$weight.loss)
boxplot.stats(data$weight.loss)$out
data.Adiet
data.Adiet <- subset(data, diet.type == "A")
data.Bdiet <- subset(data, diet.type == "B")
data.Cdiet <- subset(data, diet.type == "C")
data.Adiet
data.Adiet <- subset(data, diet.type == "A")
data.Bdiet <- subset(data, diet.type == "B")
data.Cdiet <- subset(data, diet.type == "C")
data.Bdiet
data.Adiet <- subset(data, diet.type == "A")
data.Bdiet <- subset(data, diet.type == "B")
data.Cdiet <- subset(data, diet.type == "C")
data.Cdiet
boxplot.stats(data.Cdiet$weight.loss)$out
data.Adiet <- subset(data, diet.type == "A")
data.Bdiet <- subset(data, diet.type == "B")
data.Cdiet <- subset(data, diet.type == "C")
boxplot.stats(data.Adiet$weight.loss)$out
boxplot.stats(data.Bdiet$weight.loss)$out
boxplot.stats(data.Cdiet$weight.loss)$out
data.Adiet <- subset(data, diet.type == "A")
data.Bdiet <- subset(data, diet.type == "B")
data.Cdiet <- subset(data, diet.type == "C")
paste("Выбросы в группе А:\n", boxplot.stats(data.Adiet$weight.loss)$out)
boxplot.stats(data.Bdiet$weight.loss)$out
boxplot.stats(data.Cdiet$weight.loss)$out
data.Adiet <- subset(data, diet.type == "A")
data.Bdiet <- subset(data, diet.type == "B")
data.Cdiet <- subset(data, diet.type == "C")
print("Выбросы в группе А:\n", boxplot.stats(data.Adiet$weight.loss)$out)
boxplot.stats(data.Bdiet$weight.loss)$out
boxplot.stats(data.Cdiet$weight.loss)$out
data.Adiet <- subset(data, diet.type == "A")
data.Bdiet <- subset(data, diet.type == "B")
data.Cdiet <- subset(data, diet.type == "C")
boxplot.stats(data.Adiet$weight.loss)$out
boxplot.stats(data.Bdiet$weight.loss)$out
boxplot.stats(data.Cdiet$weight.loss)$out
data.Adiet <- subset(data, diet.type == "A")
data.Bdiet <- subset(data, diet.type == "B")
data.Cdiet <- subset(data, diet.type == "C")
out.A <- boxplot.stats(data.Adiet$weight.loss)$out
out.B <- boxplot.stats(data.Bdiet$weight.loss)$out
out.C <- boxplot.stats(data.Cdiet$weight.loss)$out
out.A
out.B
out.C
out.A.index <- which(data$weight.loss %in% out.A)
which(data$weight.loss %in% out.A)
data[which(data$weight.loss %in% out.A), ]
?drop
data[which(data$weight.loss %in% out.A), ]
data[which(data$weight.loss %in% out.A), ]
subset(data, weight.loss != 8.5 && weight.loss != 9.0)
data[which(data$weight.loss %in% out.A), ]
subset(data, weight.loss != 8.5 & weight.loss != 9.0)
View(data)
data <- read.csv("data/diet.csv", row.names=1)
summary(data)
colnames(data) <- c("gender", "age", "height", "initial.weight",
"diet.type", "final.weight")
data$diet.type <- factor(c("A", "B", "C")[data$diet.type])
data$weight.loss = data$initial.weight - data$final.weight
summary(data)
boxplot.stats(data$weight.loss)$out
data.Adiet <- subset(data, diet.type == "A")
data.Bdiet <- subset(data, diet.type == "B")
data.Cdiet <- subset(data, diet.type == "C")
out.A <- boxplot.stats(data.Adiet$weight.loss)$out
out.B <- boxplot.stats(data.Bdiet$weight.loss)$out
out.C <- boxplot.stats(data.Cdiet$weight.loss)$out
out.A
out.B
out.C
length(data)
length(data)
#data[which(data$weight.loss %in% out.A), ]
#subset(data, weight.loss != 8.5 & weight.loss != 9.0)
length(data[,])
#data[which(data$weight.loss %in% out.A), ]
#subset(data, weight.loss != 8.5 & weight.loss != 9.0)
length(data[1,])
#data[which(data$weight.loss %in% out.A), ]
#subset(data, weight.loss != 8.5 & weight.loss != 9.0)
length(data[,1])
#data[which(data$weight.loss %in% out.A), ]
#subset(data, weight.loss != 8.5 & weight.loss != 9.0)
data.new <- subset(data, weight.loss != 8.5 & weight.loss != 9.0)
data.new <- subset(data, weight.loss != 8.5 & weight.loss != 9.0)
boxplot.stats(subset(data.new, diet.type == "A")$weight.loss)$out
data <- read.csv("data/diet.csv", row.names=1)
summary(data)
data <- read.csv("data/diet.csv", row.names=1)
summary(data)
colnames(data) <- c("gender", "age", "height", "initial.weight",
"diet.type", "final.weight")
data$diet.type <- factor(c("A", "B", "C")[data$diet.type])
data$weight.loss = data$initial.weight - data$final.weight
summary(data)
boxplot.stats(data$weight.loss)$out
data.Adiet <- subset(data, diet.type == "A")
data.Bdiet <- subset(data, diet.type == "B")
data.Cdiet <- subset(data, diet.type == "C")
out.A <- boxplot.stats(data.Adiet$weight.loss)$out
out.B <- boxplot.stats(data.Bdiet$weight.loss)$out
out.C <- boxplot.stats(data.Cdiet$weight.loss)$out
out.A
out.B
out.C
data.new <- subset(data, weight.loss != 8.5 & weight.loss != 9.0)
boxplot.stats(subset(data.new, diet.type == "A")$weight.loss)$out
data
data.new
data <- read.csv("data/diet.csv", row.names=1)
summary(data)
colnames(data) <- c("gender", "age", "height", "initial.weight",
"diet.type", "final.weight")
data$diet.type <- factor(c("A", "B", "C")[data$diet.type])
data$weight.loss = data$initial.weight - data$final.weight
summary(data)
boxplot.stats(data$weight.loss)$out
data.Adiet <- subset(data, diet.type == "A")
data.Bdiet <- subset(data, diet.type == "B")
data.Cdiet <- subset(data, diet.type == "C")
out.A <- boxplot.stats(data.Adiet$weight.loss)$out
out.B <- boxplot.stats(data.Bdiet$weight.loss)$out
out.C <- boxplot.stats(data.Cdiet$weight.loss)$out
out.A
out.B
out.C
data.new <- subset(data, weight.loss != 8.5 & weight.loss != 9.0)
boxplot.stats(subset(data.new, diet.type == "A")$weight.loss)$out
data
data.new
lenght(data[,1])
length(data[,1])
length(data.new[,1])
boxplot(
data=data,
weight.loss~diet.type,
col="light gray",
ylab="Weight loss (kg)",
xlab="Diet type"
)
boxplot(
data=data,
weight.loss~diet.type,
col="light gray",
ylab="Weight loss (kg)",
xlab="Diet type"
)
abline(h=0, col="green")
boxplot(
data=data,
weight.loss~diet.type,
col="light gray",
ylab="Weight loss (kg)",
xlab="Diet type"
)
abline(h=0, col="green")
boxplot(
data=data.new,
weight.loss~diet.type,
col="light gray",
ylab="Weight loss (kg)",
xlab="Diet type"
)
abline(h=0, col="green")
mean(data.Cdiet$weight.loss)
out.A
out.B
out.C
table(data$diet.type)
install.packages("gplots")
library(gplots)
plotmeans(data=data, weight.loss~diet.type)
library(gplots)
plotmeans(data=data, weight.loss~diet.type)
library(gplots)
plotmeans(data=data, weight.loss~diet.type)
aggregate(data$weight.loss, by=list(data$diet.type), FUN=sd)
library(gplots)
plotmeans(data=data, weight.loss~diet.type)
aggregate(data$weight.loss, by=list(data$diet.type), FUN=sd)
library(gplots)
plotmeans(data=data.new, weight.loss~diet.type)
aggregate(data.new$weight.loss, by=list(data.new$diet.type), FUN=sd)
library(gplots)
plotmeans(data=data, weight.loss~diet.type)
aggregate(data$weight.loss, by=list(data$diet.type), FUN=mean)
library(gplots)
plotmeans(data=data, weight.loss~diet.type)
aggregate(data$weight.loss, by=list(data$diet.type), FUN=sd)
?aggregate
library(gplots)
plotmeans(data=data, weight.loss~diet.type)
aggregate(data$weight.loss, by=list(data$diet.type), FUN=sd)
library(gplots)
plotmeans(data=data, weight.loss~diet.type)
# Рассчет среднеквадратического отклонения для каждой группы
aggregate(data$weight.loss, by=list(data$diet.type), FUN=sd)
library(gplots)
# С выбросами
plotmeans(data=data, weight.loss~diet.type)
# Рассчет среднеквадратического отклонения для каждой группы
aggregate(data$weight.loss, by=list(data$diet.type), FUN=sd)
# Без выбросов
plotmeans(data=data.new, weight.loss~diet.type)
# Рассчет среднеквадратического отклонения для каждой группы
aggregate(data.new$weight.loss, by=list(data.new$diet.type), FUN=sd)
fit <- aov(data=data, weight.loss ~ diet.type)
summary(fit)
fit <- aov(data=data, weight.loss ~ diet.type)
fit
fit <- aov(data=data, weight.loss ~ diet.type)
summary(fit)
# С выбросами
fit <- aov(data=data, weight.loss ~ diet.type)
summary(fit)
# Без выбросов
fit.new <- aov(data=data.new, weight.loss ~ diet.type)
summary(fit.new)
# С выбросами
fit <- aov(data=data, weight.loss ~ diet.type)
summary(fit)
print("\n")
# Без выбросов
fit.new <- aov(data=data.new, weight.loss ~ diet.type)
summary(fit.new)
# С выбросами
fit <- aov(data=data, weight.loss ~ diet.type)
summary(fit)
paste("\n")
# Без выбросов
fit.new <- aov(data=data.new, weight.loss ~ diet.type)
summary(fit.new)
# С выбросами
fit <- aov(data=data, weight.loss ~ diet.type)
summary(fit)
paste('\n')
# Без выбросов
fit.new <- aov(data=data.new, weight.loss ~ diet.type)
summary(fit.new)
# С выбросами
fit <- aov(data=data, weight.loss ~ diet.type)
summary(fit)
paste(\n)
# С выбросами
fit <- aov(data=data, weight.loss ~ diet.type)
summary(fit)
paste()
# Без выбросов
fit.new <- aov(data=data.new, weight.loss ~ diet.type)
summary(fit.new)
# С выбросами
fit <- aov(data=data, weight.loss ~ diet.type)
summary(fit)
# Без выбросов
fit.new <- aov(data=data.new, weight.loss ~ diet.type)
summary(fit.new)
# С выбросами
paste("С выбросами")
fit <- aov(data=data, weight.loss ~ diet.type)
summary(fit)
# Без выбросов
fit.new <- aov(data=data.new, weight.loss ~ diet.type)
summary(fit.new)
# С выбросами
print("С выбросами")
fit <- aov(data=data, weight.loss ~ diet.type)
summary(fit)
# Без выбросов
fit.new <- aov(data=data.new, weight.loss ~ diet.type)
summary(fit.new)
# С выбросами
paste("С выбросами")
fit <- aov(data=data, weight.loss ~ diet.type)
summary(fit)
# Без выбросов
fit.new <- aov(data=data.new, weight.loss ~ diet.type)
summary(fit.new)
# С выбросами
fit <- aov(data=data, weight.loss ~ diet.type)
summary(fit)
cat("\n")
# Без выбросов
fit.new <- aov(data=data.new, weight.loss ~ diet.type)
summary(fit.new)
# С выбросами
fit <- aov(data=data, weight.loss ~ diet.type)
summary(fit)
cat("\n\n")
# Без выбросов
fit.new <- aov(data=data.new, weight.loss ~ diet.type)
summary(fit.new)
TukeyHSD(fit)
# C выбросами
TukeyHSD(fit)
cat("\n\n")
# Без выбросов
TukeyHSD(fit.new)
install.packages("multcomp")
library(multcomp)
# C выбросами
par(mar=c(5,4,6,2))
tuk <- glht(fit, linfct=mcp(diet.type="Tukey"))
plot(cld(tuk, level=.05),col="lightgrey")
library(multcomp)
# C выбросами
par(mar=c(5,4,6,2))
tuk <- glht(fit, linfct=mcp(diet.type="Tukey"))
plot(cld(tuk, level=.05),col="lightgrey")
?par
library(multcomp)
# C выбросами
par(mar=c(5,4,6,2))
tuk <- glht(fit, linfct=mcp(diet.type="Tukey"))
plot(cld(tuk, level=.05),col="lightgrey")
# Без выбросов
par(mar=c(5,4,6,2))
tuk <- glht(fit.new, linfct=mcp(diet.type="Tukey"))
plot(cld(tuk, level=.05),col="lightgrey")
?glht
?tuk
??tuk
?cld
library(multcomp)
# C выбросами
par(mar=c(5,4,6,2))
tuk <- glht(fit, linfct=mcp(diet.type="Tukey"))
plot(cld(tuk, level=.05),col="lightgrey")
# Без выбросов
par(mar=c(5,4,6,2))
tuk.new <- glht(fit.new, linfct=mcp(diet.type="Tukey"))
plot(cld(tuk.new, level=.05),col="lightgrey")
